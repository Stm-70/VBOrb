VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cCBPolicyError"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/CORBA.idl
'Target File Name: cCBPolicyError.cls

Option Explicit

Implements cOrbException

'exception ::CORBA::PolicyError
Const sTypeId As String = "IDL:omg.org/CORBA/PolicyError:1.0"
Private sSource As String
Private sPostDescr As String

'Member(s)
Private reason_ As Integer

'Helper to get different COM interface
Public Function thisOrbException() As cOrbException
    Set thisOrbException = Me
End Function

'Member: reason
Public Property Get reason() As Integer
    reason = reason_
End Property

Public Property Let reason(ByVal reasonNew As Integer)
    reason_ = reasonNew
End Property

Private Property Get cOrbException_TypeId() As String
    cOrbException_TypeId = sTypeId
End Property

Private Property Get cOrbException_Source() As String
    cOrbException_Source = sSource
End Property

Private Property Get cOrbException_Description() As String
    cOrbException_Description = "CORBA User Exception: [" & sTypeId & "], " & _
        TypeName(Me) & sPostDescr
End Property

Private Sub cOrbException_addInfos(Optional ByRef SourcePrefix As String = "", _
    Optional ByRef PostDescr As String = "")
    If sSource = "" Then
        sSource = SourcePrefix
    ElseIf SourcePrefix <> "" Then
        sSource = SourcePrefix & ": " & sSource
    End If
    If PostDescr <> "" Then
        sPostDescr = sPostDescr & ", " & PostDescr
    End If
End Sub

'Helper
Private Sub cOrbException_initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    reason_ = oIn.readShort()
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "PolicyError.read")
End Sub

'Helper
Private Sub cOrbException_writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeString(sTypeId)
    Call oOut.writeShort(reason_)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "PolicyError.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    reason_ = oAny.getShort()
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call oAny.insertShort(reason_)
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub
