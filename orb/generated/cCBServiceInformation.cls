VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cCBServiceInformation"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/CORBA.idl
'Target File Name: cCBServiceInformation.cls

Option Explicit

'struct ::CORBA::ServiceInformation
Const sTypeId As String = "IDL:omg.org/CORBA/ServiceInformation:1.0"

'Member(s)
Private service_options_ As c_LongSeq
Private service_details_ As cCBServiceDetailSeq

'Member: service_options
Public Property Get service_options() As c_LongSeq
    Set service_options = service_options_
End Property

Public Property Set service_options(ByVal service_optionsNew As c_LongSeq)
    Set service_options_ = service_optionsNew
End Property

'Member: service_details
Public Property Get service_details() As cCBServiceDetailSeq
    Set service_details = service_details_
End Property

Public Property Set service_details(ByVal service_detailsNew _
    As cCBServiceDetailSeq)
    Set service_details_ = service_detailsNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    Set service_options_ = New c_LongSeq
    Call service_options_.initByRead(oIn, 0)
    Set service_details_ = New cCBServiceDetailSeq
    Call service_details_.initByRead(oIn, 0)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "ServiceInformation.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call service_options_.writeMe(oOut, 0)
    Call service_details_.writeMe(oOut, 0)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "ServiceInformation.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Set service_options_ = New c_LongSeq
    Call service_options_.initByAny(oAny.currentComponent())
    Call oAny.nextPos
    Set service_details_ = New cCBServiceDetailSeq
    Call service_details_.initByAny(oAny.currentComponent())
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call service_options_.insertIntoAny(oAny.currentComponent())
    Call oAny.nextPos
    Call service_details_.insertIntoAny(oAny.currentComponent())
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub
