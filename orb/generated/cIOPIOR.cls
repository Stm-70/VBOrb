VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cIOPIOR"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/IOP.idl
'Target File Name: cIOPIOR.cls

Option Explicit

'struct ::IOP::IOR
Const sTypeId As String = "IDL:omg.org/IOP/IOR:1.0"

'Member(s)
Private type_id_ As String
Private profiles_ As cIOPTaggedProfileSeq

'Member: type_id
Public Property Get type_id() As String
    type_id = type_id_
End Property

Public Property Let type_id(ByVal type_idNew As String)
    type_id_ = type_idNew
End Property

'Member: profiles
Public Property Get profiles() As cIOPTaggedProfileSeq
    Set profiles = profiles_
End Property

Public Property Set profiles(ByVal profilesNew As cIOPTaggedProfileSeq)
    Set profiles_ = profilesNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    type_id_ = oIn.readString()
    Set profiles_ = New cIOPTaggedProfileSeq
    Call profiles_.initByRead(oIn, 0)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "IOR.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeString(type_id_)
    Call profiles_.writeMe(oOut, 0)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "IOR.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    type_id_ = oAny.getString()
    Call oAny.nextPos
    Set profiles_ = New cIOPTaggedProfileSeq
    Call profiles_.initByAny(oAny.currentComponent())
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call oAny.insertString(type_id_)
    Call oAny.nextPos
    Call profiles_.insertIntoAny(oAny.currentComponent())
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub
