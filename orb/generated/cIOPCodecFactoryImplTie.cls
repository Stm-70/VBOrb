VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cIOPCodecFactoryImplTie"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/IOP.idl
'Target File Name: cIOPCodecFactoryImplTie.cls

Option Explicit

'You can use this class as a tie to your servant or as a servant example.
'Using as a tie:
' Your servant has to implement cIOPCodecFactory
' To activate a servant via tie write following:
'  Dim oIOPCodecFactoryImplTie As cIOPCodecFactoryImplTie
'  Set oIOPCodecFactoryImplTie = New cIOPCodecFactoryImplTie
'  Call oIOPCodecFactoryImplTie.setDelegate(oServant)
'  Call oOrb.Connect(oIOPCodecFactoryImplTie)
'Using as a servant example:
' Rename class to cIOPCodecFactoryImpl and save the file as cIOPCodecFactoryImpl.cls.
' Remove delegate stuff and write your own servant operations.
' To activate a servant write following:
'  Dim oIOPCodecFactoryImpl As cIOPCodecFactoryImpl
'  Set oIOPCodecFactoryImpl = New cIOPCodecFactoryImpl
'  Call oOrb.Connect(oIOPCodecFactoryImpl)

Implements cOrbSkeleton
Implements cIOPCodecFactory

'interface ::IOP::CodecFactory
Const sTypeId As String = "IDL:omg.org/IOP/CodecFactory:1.0"
Private oObjRef As cOrbObjRef
Private oDelegate As cIOPCodecFactory

'Each tie contains a delegate object, to which all operations are forwarded.
'You can remove this if you use this class as an example for your servant.
Public Sub setDelegate(ByVal Delegate As cIOPCodecFactory)
    Set oDelegate = Delegate
End Sub

Public Function getDelegate() As cIOPCodecFactory
    Set getDelegate = oDelegate
End Function

Friend Property Get ObjRef() As cOrbObjRef
    Set ObjRef = oObjRef
End Property

Friend Property Get This() As cIOPCodecFactory
    Dim oObj As cOrbObject
    Set oObj = New cIOPCodecFactory
    If oObj.setObjRef(oObjRef, False) Then
        Set This = Nothing
    Else
        Set This = oObj
    End If
End Property

Private Property Get cOrbSkeleton_TypeId(ByVal Item As Integer) As String
    Select Case Item
    Case 0: cOrbSkeleton_TypeId = sTypeId
    Case 1: cOrbSkeleton_TypeId = "IDL:omg.org/CORBA/Object:1.0"
    End Select
End Property

Private Property Get cOrbSkeleton_ObjRef() As cOrbObjRef
    Set cOrbSkeleton_ObjRef = oObjRef
End Property

Private Property Set cOrbSkeleton_ObjRef(ByVal newObjRef As cOrbObjRef)
    Set oObjRef = newObjRef
End Property

'Helper
Private Function cOrbSkeleton_execute(ByVal sOperation As String, _
    ByVal oIn As cOrbStream, ByVal oOut As cOrbStream) As Long
    On Error GoTo ErrHandler
    Dim oImpl_ As cIOPCodecFactory
    Set oImpl_ = IIf(oDelegate Is Nothing, Me, oDelegate)
    Select Case sOperation
    Case "create_codec"
        Dim a1_enc As cIOPEncoding
        Set a1_enc = New cIOPEncoding
        Call a1_enc.initByRead(oIn)
        Dim createCodec As cIOPCodec
        Set createCodec = oImpl_.createCodec(a1_enc)
        Call oOut.writeObject(createCodec)
    Case Else
        Call mVBOrb.VBOrb.raiseBADOPERATION(1, mVBOrb.VBOrb.CompletedNO, _
            sOperation)
    End Select
    cOrbSkeleton_execute = 0 'NO_EXCEPTION
    Exit Function
UserExWriter:
    Call mVBOrb.VBOrb.getException().writeMe(oOut)
    cOrbSkeleton_execute = 1 'USER_EXCEPTION
    Exit Function
ErrHandler:
    If mVBOrb.VBOrb.ErrIsUserEx() Then Resume UserExWriter
    Call mVBOrb.VBOrb.ErrReraise(Err, "CodecFactory.execute(" & sOperation & ")")
End Function

'Implements cIOPCodecFactory

'create_codec() raises(cIOPCodecFactoryUnknownEncoding)
Private Function cIOPCodecFactory_createCodec(ByVal enc As cIOPEncoding) _
    As cIOPCodec
    On Error GoTo ErrHandler
    'Please write your own code here if using as servant example
    If oDelegate Is Nothing Then
        Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Else
        Set cIOPCodecFactory_createCodec = oDelegate.createCodec(enc)
    End If
    Exit Function
ErrHandler:
    Set cIOPCodecFactory_createCodec = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "createCodec")
End Function
