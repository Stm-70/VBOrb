VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cIOPCodecImplTie"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/IOP.idl
'Target File Name: cIOPCodecImplTie.cls

Option Explicit

'You can use this class as a tie to your servant or as a servant example.
'Using as a tie:
' Your servant has to implement cIOPCodec
' To activate a servant via tie write following:
'  Dim oIOPCodecImplTie As cIOPCodecImplTie
'  Set oIOPCodecImplTie = New cIOPCodecImplTie
'  Call oIOPCodecImplTie.setDelegate(oServant)
'  Call oOrb.Connect(oIOPCodecImplTie)
'Using as a servant example:
' Rename class to cIOPCodecImpl and save the file as cIOPCodecImpl.cls.
' Remove delegate stuff and write your own servant operations.
' To activate a servant write following:
'  Dim oIOPCodecImpl As cIOPCodecImpl
'  Set oIOPCodecImpl = New cIOPCodecImpl
'  Call oOrb.Connect(oIOPCodecImpl)

Implements cOrbSkeleton
Implements cIOPCodec

'interface ::IOP::Codec
Const sTypeId As String = "IDL:omg.org/IOP/Codec:1.0"
Private oObjRef As cOrbObjRef
Private oDelegate As cIOPCodec

'Each tie contains a delegate object, to which all operations are forwarded.
'You can remove this if you use this class as an example for your servant.
Public Sub setDelegate(ByVal Delegate As cIOPCodec)
    Set oDelegate = Delegate
End Sub

Public Function getDelegate() As cIOPCodec
    Set getDelegate = oDelegate
End Function

Friend Property Get ObjRef() As cOrbObjRef
    Set ObjRef = oObjRef
End Property

Friend Property Get This() As cIOPCodec
    Dim oObj As cOrbObject
    Set oObj = New cIOPCodec
    If oObj.setObjRef(oObjRef, False) Then
        Set This = Nothing
    Else
        Set This = oObj
    End If
End Property

Private Property Get cOrbSkeleton_TypeId(ByVal Item As Integer) As String
    Select Case Item
    Case 0: cOrbSkeleton_TypeId = sTypeId
    Case 1: cOrbSkeleton_TypeId = "IDL:omg.org/CORBA/Object:1.0"
    End Select
End Property

Private Property Get cOrbSkeleton_ObjRef() As cOrbObjRef
    Set cOrbSkeleton_ObjRef = oObjRef
End Property

Private Property Set cOrbSkeleton_ObjRef(ByVal newObjRef As cOrbObjRef)
    Set oObjRef = newObjRef
End Property

'Helper
Private Function cOrbSkeleton_execute(ByVal sOperation As String, _
    ByVal oIn As cOrbStream, ByVal oOut As cOrbStream) As Long
    On Error GoTo ErrHandler
    Dim oImpl_ As cIOPCodec
    Set oImpl_ = IIf(oDelegate Is Nothing, Me, oDelegate)
    Select Case sOperation
    Case "encode"
        Dim a1_data As cOrbAny
        Set a1_data = oIn.readAny()
        Dim encode As c_ByteSeq
        Set encode = oImpl_.encode(a1_data)
        Call encode.writeMe(oOut, 0)
    Case "decode"
        Dim a2_data As c_ByteSeq
        Set a2_data = New c_ByteSeq
        Call a2_data.initByRead(oIn, 0)
        Dim decode As cOrbAny
        Set decode = oImpl_.decode(a2_data)
        Call oOut.writeAny(decode)
    Case "encode_value"
        Dim a3_data As cOrbAny
        Set a3_data = oIn.readAny()
        Dim encodeValue As c_ByteSeq
        Set encodeValue = oImpl_.encodeValue(a3_data)
        Call encodeValue.writeMe(oOut, 0)
    Case "decode_value"
        Dim a4_data As c_ByteSeq
        Set a4_data = New c_ByteSeq
        Call a4_data.initByRead(oIn, 0)
        Dim a4_tc As cOrbTypeCode
        Set a4_tc = oIn.readTypeCode()
        Dim decodeValue As cOrbAny
        Set decodeValue = oImpl_.decodeValue(a4_data, a4_tc)
        Call oOut.writeAny(decodeValue)
    Case Else
        Call mVBOrb.VBOrb.raiseBADOPERATION(1, mVBOrb.VBOrb.CompletedNO, _
            sOperation)
    End Select
    cOrbSkeleton_execute = 0 'NO_EXCEPTION
    Exit Function
UserExWriter:
    Call mVBOrb.VBOrb.getException().writeMe(oOut)
    cOrbSkeleton_execute = 1 'USER_EXCEPTION
    Exit Function
ErrHandler:
    If mVBOrb.VBOrb.ErrIsUserEx() Then Resume UserExWriter
    Call mVBOrb.VBOrb.ErrReraise(Err, "Codec.execute(" & sOperation & ")")
End Function

'Implements cIOPCodec

'encode() raises(cIOPCodecInvalidTypeForEncoding)
Private Function cIOPCodec_encode(ByVal data As cOrbAny) As c_ByteSeq
    On Error GoTo ErrHandler
    'Please write your own code here if using as servant example
    If oDelegate Is Nothing Then
        Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Else
        Set cIOPCodec_encode = oDelegate.encode(data)
    End If
    Exit Function
ErrHandler:
    Set cIOPCodec_encode = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "encode")
End Function

'decode() raises(cIOPCodecFormatMismatch)
Private Function cIOPCodec_decode(ByVal data As c_ByteSeq) As cOrbAny
    On Error GoTo ErrHandler
    'Please write your own code here if using as servant example
    If oDelegate Is Nothing Then
        Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Else
        Set cIOPCodec_decode = oDelegate.decode(data)
    End If
    Exit Function
ErrHandler:
    Set cIOPCodec_decode = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "decode")
End Function

'encode_value() raises(cIOPCodecInvalidTypeForEncoding)
Private Function cIOPCodec_encodeValue(ByVal data As cOrbAny) As c_ByteSeq
    On Error GoTo ErrHandler
    'Please write your own code here if using as servant example
    If oDelegate Is Nothing Then
        Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Else
        Set cIOPCodec_encodeValue = oDelegate.encodeValue(data)
    End If
    Exit Function
ErrHandler:
    Set cIOPCodec_encodeValue = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "encodeValue")
End Function

'decode_value() raises(cIOPCodecFormatMismatch, cIOPCodecTypeMismatch)
Private Function cIOPCodec_decodeValue(ByVal data As c_ByteSeq, _
    ByVal tc As cOrbTypeCode) As cOrbAny
    On Error GoTo ErrHandler
    'Please write your own code here if using as servant example
    If oDelegate Is Nothing Then
        Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Else
        Set cIOPCodec_decodeValue = oDelegate.decodeValue(data, tc)
    End If
    Exit Function
ErrHandler:
    Set cIOPCodec_decodeValue = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "decodeValue")
End Function
