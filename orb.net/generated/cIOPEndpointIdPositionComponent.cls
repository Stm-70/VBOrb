VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cIOPEndpointIdPositionComponent"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/IOP.idl
'Target File Name: cIOPEndpointIdPositionComponent.cls

Option Explicit

'struct ::IOP::EndpointIdPositionComponent
Const sTypeId As String = "IDL:omg.org/IOP/EndpointIdPositionComponent:1.0"

'Member(s)
Private begin_ As Integer
Private p_end_ As Integer

'Member: begin
Public Property Get begin() As Integer
    begin = begin_
End Property

Public Property Let begin(ByVal beginNew As Integer)
    begin_ = beginNew
End Property

'Member: end
Public Property Get p_end() As Integer
    p_end = p_end_
End Property

Public Property Let p_end(ByVal endNew As Integer)
    p_end_ = endNew
End Property

'Helper
Public Sub initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    begin_ = oIn.readUshort()
    p_end_ = oIn.readUshort()
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "EndpointIdPositionComponent.read")
End Sub

'Helper
Public Sub writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeUshort(begin_)
    Call oOut.writeUshort(p_end_)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "EndpointIdPositionComponent.write")
End Sub

'Helper
Public Sub initByAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    begin_ = oAny.getUshort()
    Call oAny.nextPos
    p_end_ = oAny.getUshort()
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "initByAny")
End Sub

'Helper
Public Sub insertIntoAny(ByVal oAny As cOrbAny)
    On Error GoTo ErrHandler
    Call oAny.insertUshort(begin_)
    Call oAny.nextPos
    Call oAny.insertUshort(p_end_)
    Call oAny.nextPos
    Call oAny.rewind
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "insertIntoAny")
End Sub
