VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cIOPCodecFactory"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/IOP.idl
'Target File Name: cIOPCodecFactory.cls

Option Explicit

Implements cOrbAbstractBase
Implements cOrbObject

'interface ::IOP::CodecFactory
Const sTypeId As String = "IDL:omg.org/IOP/CodecFactory:1.0"
Private oObjRef As cOrbObjRef

'Helper to get different COM interface
Friend Function thisOrbAbstractBase() As cOrbAbstractBase
    Set thisOrbAbstractBase = Me
End Function

'Helper
Private Function cOrbAbstractBase_isObjRef() As Boolean
    cOrbAbstractBase_isObjRef = True
End Function

'Helper to get different COM interface
Friend Function thisOrbObject() As cOrbObject
    Set thisOrbObject = Me
End Function

'Helper
Private Function cOrbObject_setObjRef(ByVal ObjRef As cOrbObjRef, _
    ByVal Check As Boolean) As Boolean
    On Error GoTo ErrHandler
    If ObjRef Is Nothing Then
        cOrbObject_setObjRef = True
    Else
        cOrbObject_setObjRef = False
        Call ObjRef.narrow(sTypeId, Check, True)
    End If
    Set oObjRef = ObjRef
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "setObjRef")
End Function

'Helper
Private Function cOrbObject_getObjRef() As cOrbObjRef
    Set cOrbObject_getObjRef = oObjRef
End Function

'Helper
Private Function cOrbObject_getId() As String
    cOrbObject_getId = sTypeId
End Function

'create_codec() raises(cIOPCodecFactoryUnknownEncoding)
Public Function createCodec(ByVal enc As cIOPEncoding) As cIOPCodec
    On Error GoTo ErrHandler
    Dim oRequest As cOrbRequest
    Set oRequest = oObjRef.request("create_codec", False)
    Dim oOut As cOrbStream
    Set oOut = oRequest.InArg
    Call enc.writeMe(oOut)
    Dim oIn As cOrbStream
    If oRequest.invokeReqst(True) Then
        Set oIn = oRequest.OutRes
        Dim sTypeId As String
        sTypeId = oIn.readString()
        Dim oUserEx As mVBOrb.VBOrb.cOrbException
        Select Case sTypeId
        Case "IDL:omg.org/IOP/CodecFactory/UnknownEncoding:1.0"
            Set oUserEx = New cIOPCodecFactoryUnknownEncoding
            Call oUserEx.initByRead(oIn)
        Case Else
            Call mVBOrb.VBOrb.raiseUNKNOWN(1, mVBOrb.VBOrb.CompletedMAYBE, _
                "Undefined CORBA User Exception: [" & sTypeId & "]")
        End Select
        Call mVBOrb.VBOrb.raiseUserEx(oUserEx)
    Else
        Set oIn = oRequest.OutRes
        Set createCodec = mIOPCodec.narrow(oIn.readObject())
    End If
    Exit Function
ErrHandler:
    Set createCodec = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "createCodec")
End Function
