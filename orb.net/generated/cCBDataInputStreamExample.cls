VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cCBDataInputStreamExample"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/CORBA.idl
'Target File Name: cCBDataInputStreamExample.cls

Option Explicit

'You can use this class as a value example:
' Rename class to cCBDataInputStream and save the file as cCBDataInputStream.cls.
' Finally write your own local value operations.

Implements cOrbAbstractBase
Implements cOrbValueBase

'valuetype ::CORBA::DataInputStream
Const sTypeId As String = "IDL:omg.org/CORBA/DataInputStream:1.0"

'Helper to get different COM interface
Friend Function thisOrbAbstractBase() As cOrbAbstractBase
    Set thisOrbAbstractBase = Me
End Function

'Helper
Private Function cOrbAbstractBase_isObjRef() As Boolean
    cOrbAbstractBase_isObjRef = False
End Function

'Helper to get different COM interface
Friend Function thisOrbValueBase() As cOrbValueBase
    Set thisOrbValueBase = Me
End Function

Private Function cOrbValueBase_UniqueId() As Long
    cOrbValueBase_UniqueId = mVBOrb.VBOrb.getNextUniqueId()
End Function

'Helper
Private Sub cOrbValueBase_initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "DataInputStream.read")
End Sub

'Helper
Private Sub cOrbValueBase_writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "DataInputStream.write")
End Sub

Private Function cOrbValueBase_getIds(ByVal Item As Integer) As String
    Select Case Item
    Case 0: cOrbValueBase_getIds = sTypeId
    End Select
End Function

Private Function cOrbValueBase_isCustom() As Boolean
    cOrbValueBase_isCustom = False
End Function

'read_any()
Public Function readAny() As cOrbAny
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readAny = oDelegate.readAny()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readAny = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readAny")
End Function

'read_boolean()
Public Function readBoolean() As Boolean
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readBoolean = oDelegate.readBoolean()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readBoolean")
End Function

'read_char()
Public Function readChar() As Byte
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readChar = oDelegate.readChar()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readChar")
End Function

'read_wchar()
Public Function readWchar() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readWchar = oDelegate.readWchar()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readWchar")
End Function

'read_octet()
Public Function readOctet() As Byte
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readOctet = oDelegate.readOctet()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readOctet")
End Function

'read_short()
Public Function readShort() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readShort = oDelegate.readShort()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readShort")
End Function

'read_ushort()
Public Function readUshort() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readUshort = oDelegate.readUshort()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUshort")
End Function

'read_long()
Public Function readLong() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readLong = oDelegate.readLong()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLong")
End Function

'read_ulong()
Public Function readUlong() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readUlong = oDelegate.readUlong()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUlong")
End Function

'read_longlong()
Public Function readLonglong() As Variant
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readLonglong = oDelegate.readLonglong()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLonglong")
End Function

'read_ulonglong()
Public Function readUlonglong() As Variant
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readUlonglong = oDelegate.readUlonglong()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUlonglong")
End Function

'read_float()
Public Function readFloat() As Single
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readFloat = oDelegate.readFloat()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readFloat")
End Function

'read_double()
Public Function readDouble() As Double
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readDouble = oDelegate.readDouble()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readDouble")
End Function

'read_longdouble()
Public Function readLongdouble() As cOrbLongdouble
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readLongdouble = oDelegate.readLongdouble()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readLongdouble = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLongdouble")
End Function

'read_string()
Public Function readString() As String
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readString = oDelegate.readString()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readString")
End Function

'read_wstring()
Public Function readWstring() As String
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. readWstring = oDelegate.readWstring()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readWstring")
End Function

'read_Object()
Public Function readObject() As cOrbObject
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readObject = oDelegate.readObject()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readObject = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readObject")
End Function

'read_Abstract()
Public Function readAbstract() As AbstractBase
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readAbstract = oDelegate.readAbstract()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readAbstract = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readAbstract")
End Function

'read_Value()
Public Function readValue() As cOrbValueBase
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readValue = oDelegate.readValue()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readValue = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readValue")
End Function

'read_TypeCode()
Public Function readTypeCode() As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readTypeCode = oDelegate.readTypeCode()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readTypeCode = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readTypeCode")
End Function

'read_any_array()
Public Sub readAnyArray(ByRef seq As c_AnySeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readAnyArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readAnyArray")
End Sub

'read_boolean_array()
Public Sub readBooleanArray(ByRef seq As c_BooleanSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readBooleanArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readBooleanArray")
End Sub

'read_char_array()
Public Sub readCharArray(ByRef seq As c_CharSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readCharArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readCharArray")
End Sub

'read_wchar_array()
Public Sub readWcharArray(ByRef seq As c_WcharSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readWcharArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readWcharArray")
End Sub

'read_octet_array()
Public Sub readOctetArray(ByRef seq As c_ByteSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readOctetArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readOctetArray")
End Sub

'read_short_array()
Public Sub readShortArray(ByRef seq As c_IntegerSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readShortArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readShortArray")
End Sub

'read_ushort_array()
Public Sub readUshortArray(ByRef seq As c_IntegerSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readUshortArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUshortArray")
End Sub

'read_long_array()
Public Sub readLongArray(ByRef seq As c_LongSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readLongArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLongArray")
End Sub

'read_ulong_array()
Public Sub readUlongArray(ByRef seq As c_LongSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readUlongArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUlongArray")
End Sub

'read_ulonglong_array()
Public Sub readUlonglongArray(ByRef seq As c_VariantSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readUlonglongArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readUlonglongArray")
End Sub

'read_longlong_array()
Public Sub readLonglongArray(ByRef seq As c_VariantSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readLonglongArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLonglongArray")
End Sub

'read_float_array()
Public Sub readFloatArray(ByRef seq As c_SingleSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readFloatArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readFloatArray")
End Sub

'read_double_array()
Public Sub readDoubleArray(ByRef seq As c_DoubleSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readDoubleArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readDoubleArray")
End Sub

'read_long_double_array()
Public Sub readLongDoubleArray(ByRef seq As c_DoubleSeq, ByVal offset As Long, _
    ByVal length As Long)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readLongDoubleArray(seq, offset, length)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readLongDoubleArray")
End Sub

'read_fixed() raises(cCBBadFixedValue)
Public Function readFixed(ByVal digits As Integer, ByVal scale_ As Integer) _
    As cOrbAny
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set readFixed = oDelegate.readFixed(digits, scale_)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set readFixed = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "readFixed")
End Function

'read_fixed_array() raises(cCBBadFixedValue)
Public Sub readFixedArray(ByRef seq As c_AnySeq, ByVal offset As Long, _
    ByVal length As Long, ByVal digits As Integer, ByVal scale_ As Integer)
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Call oDelegate.readFixedArray(seq, offset, length, digits, scale_)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "readFixedArray")
End Sub
