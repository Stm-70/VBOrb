VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "cOrbTypeCode"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'Generated by IDL2VB v123. Copyright (c) 1999-2003 Martin.Both
'Source File Name: ../include/TypeCode.idl
'Target File Name: cOrbTypeCode.cls

Option Explicit

Implements cOrbAbstractBase
Implements cOrbValueBase

'valuetype ::CORBA::TypeCode
Const sTypeId As String = "IDL:omg.org/CORBA/TypeCode:1.0"

'State member(s)
Private lTCKind_ As Long
Private sTCId_ As String
Private sTCName_ As String

'Helper to get different COM interface
Friend Function thisOrbAbstractBase() As cOrbAbstractBase
    Set thisOrbAbstractBase = Me
End Function

'Helper
Private Function cOrbAbstractBase_isObjRef() As Boolean
    cOrbAbstractBase_isObjRef = False
End Function

'Helper to get different COM interface
Friend Function thisOrbValueBase() As cOrbValueBase
    Set thisOrbValueBase = Me
End Function

Private Function cOrbValueBase_UniqueId() As Long
    cOrbValueBase_UniqueId = mVBOrb.VBOrb.getNextUniqueId()
End Function

'Helper
Private Sub cOrbValueBase_initByRead(ByVal oIn As cOrbStream)
    On Error GoTo ErrHandler
    lTCKind_ = oIn.readUlong()
    sTCId_ = oIn.readString()
    sTCName_ = oIn.readString()
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "TypeCode.read")
End Sub

'Helper
Private Sub cOrbValueBase_writeMe(ByVal oOut As cOrbStream)
    On Error GoTo ErrHandler
    Call oOut.writeUlong(lTCKind_)
    Call oOut.writeString(sTCId_)
    Call oOut.writeString(sTCName_)
    Exit Sub
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "TypeCode.write")
End Sub

Private Function cOrbValueBase_getIds(ByVal Item As Integer) As String
    Select Case Item
    Case 0: cOrbValueBase_getIds = sTypeId
    End Select
End Function

Private Function cOrbValueBase_isCustom() As Boolean
    cOrbValueBase_isCustom = False
End Function

'State member: lTCKind
Public Property Get lTCKind() As Long
    lTCKind = lTCKind_
End Property

Public Property Let lTCKind(ByVal lTCKindNew As Long)
    lTCKind_ = lTCKindNew
End Property

'State member: sTCId
Public Property Get sTCId() As String
    sTCId = sTCId_
End Property

Public Property Let sTCId(ByVal sTCIdNew As String)
    sTCId_ = sTCIdNew
End Property

'State member: sTCName
Public Property Get sTCName() As String
    sTCName = sTCName_
End Property

Public Property Let sTCName(ByVal sTCNameNew As String)
    sTCName_ = sTCNameNew
End Property

'equal()
Public Function equal(ByVal tc As cOrbTypeCode) As Boolean
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. equal = oDelegate.equal(tc)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "equal")
End Function

'equivalent()
Public Function equivalent(ByVal tc As cOrbTypeCode) As Boolean
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. equivalent = oDelegate.equivalent(tc)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "equivalent")
End Function

'get_compact_typecode()
Public Function getCompactTypecode() As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set getCompactTypecode = oDelegate.getCompactTypecode()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set getCompactTypecode = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "getCompactTypecode")
End Function

'kind()
Public Function kind() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. kind = oDelegate.kind()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "kind")
End Function

'id() raises(cOrbTypeCodeBadKind)
Public Function id() As String
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. id = oDelegate.id()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "id")
End Function

'name() raises(cOrbTypeCodeBadKind)
Public Function name() As String
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. name = oDelegate.name()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "name")
End Function

'member_count() raises(cOrbTypeCodeBadKind)
Public Function memberCount() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. memberCount = oDelegate.memberCount()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "memberCount")
End Function

'member_name() raises(cOrbTypeCodeBadKind, cOrbTypeCodeBounds)
Public Function memberName(ByVal index As Long) As String
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. memberName = oDelegate.memberName(index)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "memberName")
End Function

'member_type() raises(cOrbTypeCodeBadKind, cOrbTypeCodeBounds)
Public Function memberType(ByVal index As Long) As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set memberType = oDelegate.memberType(index)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set memberType = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "memberType")
End Function

'member_label() raises(cOrbTypeCodeBadKind, cOrbTypeCodeBounds)
Public Function memberLabel(ByVal index As Long) As cOrbAny
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set memberLabel = oDelegate.memberLabel(index)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set memberLabel = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "memberLabel")
End Function

'discriminator_type() raises(cOrbTypeCodeBadKind)
Public Function discriminatorType() As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set discriminatorType = oDelegate.discriminatorType()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set discriminatorType = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "discriminatorType")
End Function

'default_index() raises(cOrbTypeCodeBadKind)
Public Function defaultIndex() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. defaultIndex = oDelegate.defaultIndex()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "defaultIndex")
End Function

'length() raises(cOrbTypeCodeBadKind)
Public Function length() As Long
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. length = oDelegate.length()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "length")
End Function

'content_type() raises(cOrbTypeCodeBadKind)
Public Function contentType() As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set contentType = oDelegate.contentType()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set contentType = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "contentType")
End Function

'fixed_digits() raises(cOrbTypeCodeBadKind)
Public Function fixedDigits() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. fixedDigits = oDelegate.fixedDigits()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "fixedDigits")
End Function

'fixed_scale() raises(cOrbTypeCodeBadKind)
Public Function fixedScale() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. fixedScale = oDelegate.fixedScale()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "fixedScale")
End Function

'member_visibility() raises(cOrbTypeCodeBadKind, cOrbTypeCodeBounds)
Public Function memberVisibility(ByVal index As Long) As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. memberVisibility = oDelegate.memberVisibility(index)
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "memberVisibility")
End Function

'type_modifier() raises(cOrbTypeCodeBadKind)
Public Function typeModifier() As Integer
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. typeModifier = oDelegate.typeModifier()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Call mVBOrb.VBOrb.ErrReraise(Err, "typeModifier")
End Function

'concrete_base_type() raises(cOrbTypeCodeBadKind)
Public Function concreteBaseType() As cOrbTypeCode
    On Error GoTo ErrHandler
    'Please write your code here after copying this file
    'instead of throwing an exception
    'e.g. Set concreteBaseType = oDelegate.concreteBaseType()
    Call mVBOrb.VBOrb.raiseNOIMPLEMENT(0, mVBOrb.VBOrb.CompletedNO)
    Exit Function
ErrHandler:
    Set concreteBaseType = Nothing
    Call mVBOrb.VBOrb.ErrReraise(Err, "concreteBaseType")
End Function
